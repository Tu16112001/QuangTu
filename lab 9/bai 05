#include<stdio.h>
#include<stdlib.h>
#include<time.h>

/*Khai bao cac ham*/
void init(int *ary, int n);//khoi tao
void display(int *ary, int n);
int getMax(int *ary, int n);
float getAvg(int *ary, int n);
void findValue(int *ary, int n);
void menu();

/*=============================*/
int main()
{
    menu();
    return 0;
}
void init(int *ary, int n)
{
    printf("\nKhoi tao gia tri mac dinh cua mang 20 phan tu ngau nhien");
    srand((unsigned)time(NULL));
    for(int i=0;i<n;i++){
        ary[i] = rand()%100+1;//lay so ngau nhien [1-100]
    }
}
void display(int *ary, int n)
{
    int i;
    printf("\nDisplay all elements: ");
    for(i=0;i<n;i++){
        printf("\nPhan tu thu %d: %d ",i+1, ary[i]);
    }
}
int getMax(int *ary, int n)
{
    int i, max = ary[0];
    for(i=1;i<n;i++){
        if (max<ary[i]){
            max=ary[i];
        }
    }
    return max;
}
float getAvg(int *ary, int n)
{
    int i;
    float avg = 0;
    for (i=0;i<n;i++) {
        avg = (ary[i-1] + ary[0])/2;
    }
    return avg;
}
void findValue(int *ary, int n)
{
    int i,k;
    printf("\nNhap gia tri can tim k = ");
    scanf("%d",&k);
    for(i=0;i<n;i++){
        if(k == ary[i])
            printf("\nSo %d o vi tri thu %d",k,i);
    }
}
void menu()
{
    int n;
    int ch, *ary;
    ary = (int*)malloc(n*sizeof(int));
    printf("\nNhap n = ");
    scanf("%d",&n);
    while(ch)
    {
        printf("\n------------------------------------\n");
        printf("\t\tMenu\n");
        printf("------------------------------------\n");
        printf("\n 1. Init Function");
        printf("\n 2. Display all array");
        printf("\n 3. Get Max Value");
        printf("\n 4. Get Avg Value");
        printf("\n 5. Find by Value");
        printf("\n 6. Exit");
        printf("\n------------------------------------\n");
        printf("\nEnter your choice: ");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1: init(ary,n);
                break;
            case 2: display(ary,n);
                break;
            case 3: printf("\nMax value is: %d",getMax(ary,n));
                break;
            case 4: printf("\nAvg value is: %f",getAvg(ary,n));
                break;
            case 5: findValue(ary,n);
                break;
            case 6: exit(0);
        }
    }
}
